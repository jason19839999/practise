<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <jmxConfigurator/>
    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,, 此处日志打印格式复用base.xml中的-->
    <!-- appender是configuration的子节点，是负责写日志的组件。 -->
    <!-- 读取application.yml文件中的项目名 -->
    <springProperty scope="context" name="logName" source="spring.application.name" defaultValue="logName"/>
    <!-- 日志文件输入配置 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <file>/bussinessLogs/${logName}/${logName}-scrollFile.log</file>
        <append>false</append>
        <!--1.先按日期存日志，日期变了，将前一天的日志文件名重命名为XXX%日期%索引，新的日志仍然是${logName}-run.log -->
        <!--2.如果日期没有发生变化，但是当前日志的文件大小超过100MB时，对当前日志进行分割 重命名-->
        <!--3.按天来回滚，如果需要按小时来回滚，则设置为{yyyy-MM-dd_HH} -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>/bussinessLogs/${logName}/${logName}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>100Mb</maxFileSize>
            <maxHistory>70</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %t %logger Line:%-3L - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>



    <!-- 请求打印日志 -->
    <appender name="REQUEST-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>/opt/app/logs/business-test/${logName}/request/${logName}-common-request.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>/opt/app/logs/business-test/${logName}/request/${logName}-common-request.log.%d{yyyyMMdd}
            </fileNamePattern>
        </rollingPolicy>
        <encoder charset="UTF-8">
            <pattern>%d [%t] %-5p %c{2} [%X{CLIENT}] [%X{A}/%X{B}/%X{C}/] - [%m]%n</pattern>
        </encoder>
    </appender>

    <!--异步输出-->
    <appender name="async-log" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>512</queueSize>
        <appender-ref ref="REQUEST-APPENDER"/>
    </appender>

    <logger name="BUSINESS.ASYNC" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="async-log"/>
    </logger>



    <!-- 不同环境输出不同级别的日志 -->
    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
        </root>
        <!--<logger name="tk.mybatis" level="DEBUG"/>-->
        <logger name="com.example" level="INFO"/>
    </springProfile>

    <!-- 不同环境输出不同级别的日志 -->
    <springProfile name="test">
        <root level="INFO">
            <!--<appender-ref ref="CONSOLE"/>-->
            <appender-ref ref="FILE"/>
        </root>
        <!--<logger name="tk.mybatis" level="DEBUG"/>-->
        <logger name="com.example" level="INFO"/>
    </springProfile>

    <springProfile name="uat,pro">
        <root level="INFO">
            <!--<appender-ref ref="CONSOLE"/>-->
            <appender-ref ref="FILE"/>
        </root>
        <!--<logger name="tk.mybatis" level="INFO"/>-->
        <logger name="com.example" level="INFO"/>
    </springProfile>


</configuration>